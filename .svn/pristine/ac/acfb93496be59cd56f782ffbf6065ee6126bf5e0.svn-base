/**

Copyright 2007-2010, Karljohan Lundin Palmerius



This file is part of Candy.

Candy is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

Candy is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Candy; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

#include <HVR/Gadgeteer.hh>

#ifdef HAVE_GADGETEER

#include <Candy/Debug.hh>


using namespace H3D;
using namespace HVR;
using namespace vrj;

H3DNodeDatabase Gadgeteer::database
( "Gadgeteer",
  &(newInstance<Gadgeteer>),
  typeid( Gadgeteer ),
  &X3DBindableNode::database );

namespace GadgeteerInternals {
  FIELDDB_ELEMENT( Gadgeteer, configFile, INITIALIZE_ONLY );
}

Gadgeteer::Gadgeteer
( H3D::Inst< H3D::MFString > _configFile )
  : X3DBindableNode("Gadgeteer"),
    configFile( _configFile ),
    kernel(NULL) {
  type_name = "Gadgeteer";
  database.initFields( this );
}

Gadgeteer::~Gadgeteer() {
  if( kernel != NULL && kernel->isRunning() ){
    kernel->stop();
    kernel->waitForKernelStop();
  }
}

void Gadgeteer::initialize(){
  X3DBindableNode::initialize();
  
  Kernel* kernel = Kernel::instance();
  kernel->initConfig();
  for( MFString::const_iterator i = configFile->begin() ;
       i != configFile->end(); i++ ){
    kernel->loadConfigFile(i->c_str()); }
  kernel->start();
}

void Gadgeteer::traverseSG( TraverseInfo &ti ){
  X3DBindableNode::traverseSG( ti );
}

#endif
